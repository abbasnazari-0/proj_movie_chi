import 'package:cached_network_image/cached_network_image.dart';
import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:get/get.dart';
import 'package:iconsax/iconsax.dart';
import 'package:loading_animation_widget/loading_animation_widget.dart';
import 'package:pull_to_refresh_flutter3/pull_to_refresh_flutter3.dart';
import 'package:shimmer/shimmer.dart';

import '../../../../../../core/utils/constants.dart';
import '../../../../../../core/widgets/mytext.dart';
import '../../../../../../core/widgets/video_item_header.dart';
import '../../../../../feature_play_list/presentation/pages/feature_play_list.dart';
import '../../../../data/model/home_catagory_model.dart';
import '../../../controller/home_page_controller.dart';
import '../../../controller/home_views_controller/grid_home_controller.dart';

class GridHomeView extends StatefulWidget {
  const GridHomeView({
    super.key,
    required this.homeCatagoryItem,
  });

  final HomeCatagoryItemModel homeCatagoryItem;

  @override
  State<GridHomeView> createState() => _GridHomeViewState();
}

class _GridHomeViewState extends State<GridHomeView> {
  RefreshController refreshController =
      RefreshController(initialRefresh: false);
  @override
  Widget build(BuildContext context) {
    final gridHomeViewController = GridHomeViewController();
    return Container(
      color: Constants.hexToColor(widget.homeCatagoryItem.viewColor!)
          .withAlpha(int.parse(widget.homeCatagoryItem.colorAlpha ?? "255")),
      width: double.tryParse(widget.homeCatagoryItem.viewWidth!)!.w,
      height: double.tryParse(widget.homeCatagoryItem.viewHeight!)!.h,
      child: Column(
        children: [
          InkWell(
            onTap: () {
              Get.to(() => PlayListScreen(
                    homeCatagoryItemID: widget.homeCatagoryItem.id.toString(),
                    type: "more_autogenerated",
                    title: widget.homeCatagoryItem.title!,
                  ));
            },
            child: Padding(
              padding: const EdgeInsets.only(right: 20, top: 10, left: 10),
              child: Row(
                children: [
                  MyText(
                    txt: widget.homeCatagoryItem.title!,
                    color: Theme.of(context).primaryTextTheme.bodyMedium!.color,
                    fontWeight: FontWeight.bold,
                    size: 16.sp,
                    overflow: TextOverflow.ellipsis,
                  ),
                  const Spacer(),
                  MyText(
                      txt: "بیشتر",
                      color: Colors.white,
                      fontWeight: FontWeight.bold,
                      size: 13.sp),
                  const Icon(Iconsax.arrow_left_2),
                ],
              ),
            ),
          ),
          SizedBox(height: 5.h),
          Expanded(
            child: SmartRefresher(
              controller: refreshController,
              scrollDirection: Axis.horizontal,
              enablePullUp: true,
              footer: const GridLoadingEnded(),
              onLoading: () async {
                await refreshController.requestLoading();
                await gridHomeViewController
                    .onloadingMore(widget.homeCatagoryItem);
                refreshController.loadComplete();

                setState(() {});
                // gridHomeViewController.onloadingMore();
              },
              child: ListView.builder(
                  scrollDirection: Axis.horizontal,
                  itemCount: widget.homeCatagoryItem.data?.length,
                  itemBuilder: (context, index) {
                    HomeItemData itemData =
                        widget.homeCatagoryItem.data![index];
                    return SizedBox(
                      width:
                          double.tryParse(widget.homeCatagoryItem.viewWidth!)!
                              .w,
                      child: Stack(
                        fit: StackFit.expand,
                        children: [
                          GestureDetector(
                            onTap: () async {
                              Constants.openHomeItem(widget.homeCatagoryItem,
                                  index, itemData.thumbnail1x!);
                              final homePageController =
                                  Get.find<HomePageController>();
                              homePageController.returnScreen();
                            },
                            child: Column(
                              children: [
                                Expanded(
                                  child: Container(
                                    width: double.tryParse(
                                            widget.homeCatagoryItem.viewWidth!)!
                                        .w,
                                    // height: 180,
                                    margin: const EdgeInsets.only(right: 10),
                                    child: ClipRRect(
                                      borderRadius: BorderRadius.circular(10.0),
                                      child: CachedNetworkImage(
                                        imageUrl: Constants.imageFiller(
                                            itemData.thumbnail1x!),
                                        fit: BoxFit.cover,
                                        httpHeaders: const {
                                          'Referer': 'https://www.cinimo.ir/'
                                        },
                                        // handle error
                                        errorWidget: (context, url, error) =>
                                            const Icon(Icons.error),
                                        placeholder: (context, url) =>
                                            Shimmer.fromColors(
                                          baseColor: Colors.white10,
                                          highlightColor: Colors.black12,
                                          child: Container(
                                            color: Colors.grey[300],
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                                SizedBox(height: 5.h),
                                MyText(
                                  txt: itemData.title!,
                                  length: 13,
                                  color: Theme.of(context)
                                      .primaryTextTheme
                                      .bodyMedium!
                                      .color,
                                  fontWeight: FontWeight.bold,
                                  maxLine: 2,
                                  size: 10.sp,
                                  overflow: TextOverflow.ellipsis,
                                  textAlign: TextAlign.center,
                                ),
                              ],
                            ),
                          ),
                          Positioned(
                            left: 0,
                            right: 0,
                            top: 0,
                            child: Padding(
                              padding: const EdgeInsets.all(8.0),
                              child: VideoItemHeader(
                                isDubbed: itemData.dubble != null,
                                hasSubtitle: itemData.subtitle != null,
                                imdb: itemData.imdb!,
                              ),
                            ),
                          ),
                        ],
                      ),
                    );
                  }),
            ),
          ),
          SizedBox(height: 8.h),
        ],
      ),
    );
  }
}

class GridLoadingEnded extends StatelessWidget {
  const GridLoadingEnded({
    super.key,
  });

  @override
  Widget build(BuildContext context) {
    return CustomFooter(
      builder: (BuildContext context, LoadStatus? mode) {
        Widget body;
        if (mode == LoadStatus.idle) {
          body = const Text("بیشتر");
        } else if (mode == LoadStatus.loading) {
          body = LoadingAnimationWidget.flickr(
            leftDotColor: Theme.of(context).colorScheme.secondary,
            rightDotColor:
                Theme.of(context).colorScheme.background.withAlpha(100),
            size: 20,
          );
        } else if (mode == LoadStatus.failed) {
          body = const Text("خطا در بارگذاری");
        } else if (mode == LoadStatus.canLoading) {
          body = const Text("بیشتر");
        } else {
          body = const Text("بیشتر");
        }
        return SizedBox(
          height: 55.0,
          child: Center(child: body),
        );
      },
    );
  }
}
